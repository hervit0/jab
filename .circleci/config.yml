# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  noBuild:
    docker:
      # specify the version
      - image: circleci/golang:1.11
        environment:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
    working_directory: /go/src/github.com/hervit0/jab
    steps:
      - run: echo 'done'
  buildJob:
    docker:
      # specify the version
      - image: circleci/golang:1.11
        environment:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
      - image: circleci/dynamodb
        # custom entrypoint to limit RAM to 1G to prevent OOM on CircleCI 2.0.
        # https://circleci.com/docs/2.0/configuration-reference/#docker--machine--macosexecutor
        # entrypoint: ["java", "-Xmx1G", "-jar", "DynamoDBLocal.jar"]

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/hervit0/jab
    steps:
      - checkout
      # - run: sleep 120
      # - run:
      #    name: install java
      #    command: |
      #       apt-get update && apt-get install default-jre default-jdk
      # - run:
      #    name: setup container
      #    command: |
      #       curl -k -L -o dynamodb-local.tgz http://dynamodb-local.s3-website-us-west-2.amazonaws.com/dynamodb_local_latest.tar.gz
      #       tar -xzf dynamodb-local.tgz
      #       java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb
      # - run:
      #     name: Install Python and AWS
      #     working_directory: /
      #     command: |
      #       sudo apt-get -y -qq update
      #       sudo apt-get -y -qq install python3.4-dev
      #       curl -O https://bootstrap.pypa.io/get-pip.py
      #       python3.4 get-pip.py --user
      #       pip install awscli --upgrade --user
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:8000 -timeout 120s
      # - setup_remote_docker
      # - run:
      #     name: Pinging
      #     command: aws dynamodb list-tables --endpoint-url http://localhost:8000
      # - run:
      #     name: Pinging
      #     command: aws dynamodb list-tables --endpoint-url http://127.0.0.1:8000
      - run: dep ensure
      - run: make

workflows:
  version: 2
  buildWorkflow:
    jobs:
      - noBuild
